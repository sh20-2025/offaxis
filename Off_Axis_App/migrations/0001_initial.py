# Generated by Django 5.1.2 on 2025-02-26 12:09

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Address",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("line_1", models.TextField(max_length=256)),
                ("line_2", models.TextField(max_length=256)),
                ("country", models.TextField(max_length=256)),
                ("city", models.TextField(max_length=256)),
                ("state_or_province", models.TextField(max_length=256)),
                ("post_code", models.TextField(max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name="Cart",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ContactInformation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("first_name", models.CharField(max_length=50)),
                ("last_name", models.CharField(max_length=50)),
                ("email", models.EmailField(max_length=254)),
                ("message_content", models.TextField(max_length=2000)),
                (
                    "message_type",
                    models.CharField(
                        choices=[
                            ("general_question", "General Question"),
                            ("cant_find_tickets", "I can't find my tickets"),
                            ("ticket_query", "Ticket Query"),
                            ("press_enquiry", "Press Enquiry"),
                        ],
                        max_length=20,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="GenreTag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("tag", models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name="SocialLink",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("Spotify", "Spotify"),
                            ("YouTube", "YouTube"),
                            ("SoundCloud", "SoundCloud"),
                            ("Instagram", "Instagram"),
                            ("WhatsApp", "WhatsApp"),
                        ],
                        max_length=100,
                    ),
                ),
                ("url", models.URLField()),
            ],
        ),
        migrations.CreateModel(
            name="Artist",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("bio", models.TextField(blank=True, max_length=500)),
                ("is_approved", models.BooleanField(default=False)),
                (
                    "profile_picture",
                    models.ImageField(blank=True, null=True, upload_to="artists/"),
                ),
                ("slug", models.SlugField(default="default-slug", unique=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="artist",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "cart",
                    models.OneToOneField(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="Off_Axis_App.cart",
                    ),
                ),
                (
                    "genre_tags",
                    models.ManyToManyField(blank=True, to="Off_Axis_App.genretag"),
                ),
                (
                    "social_links",
                    models.ManyToManyField(blank=True, to="Off_Axis_App.sociallink"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Client",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("billing_info", models.CharField(blank=True, max_length=100)),
                ("phone_number", models.CharField(blank=True, max_length=100)),
                (
                    "cart",
                    models.OneToOneField(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="Off_Axis_App.cart",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Festival",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.TextField(max_length=256)),
                ("description", models.TextField(max_length=1024)),
                ("start_date", models.DateTimeField()),
                ("end_date", models.DateTimeField()),
                ("youtube_video_url", models.URLField(blank=True)),
                ("slug", models.SlugField(default="", unique=True)),
                ("is_active", models.BooleanField(default=True)),
                ("festival_photo_url", models.URLField(blank=True)),
                (
                    "artists",
                    models.ManyToManyField(blank=True, to="Off_Axis_App.artist"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Gig",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateTimeField()),
                ("price", models.DecimalField(decimal_places=2, max_digits=19)),
                (
                    "booking_fee",
                    models.DecimalField(decimal_places=2, default=1.25, max_digits=19),
                ),
                ("capacity", models.IntegerField()),
                ("description", models.TextField(max_length=500)),
                ("gig_photo_url", models.TextField(max_length=2048)),
                ("is_approved", models.BooleanField(default=False)),
                (
                    "stripe_product_id",
                    models.TextField(blank=True, max_length=256, null=True),
                ),
                (
                    "artist",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="gigs",
                        to="Off_Axis_App.artist",
                    ),
                ),
                (
                    "supporting_artists",
                    models.ManyToManyField(
                        blank=True,
                        related_name="supporting_artists",
                        to="Off_Axis_App.artist",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CartItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("quantity", models.IntegerField()),
                ("total_price", models.DecimalField(decimal_places=2, max_digits=19)),
                (
                    "cart",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="Off_Axis_App.cart",
                    ),
                ),
                (
                    "gig",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="Off_Axis_App.gig",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Ticket",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("checkout_email", models.EmailField(max_length=254)),
                ("checkout_name", models.TextField(max_length=256)),
                ("checkout_postcode", models.TextField(max_length=256)),
                ("checkout_country", models.TextField(max_length=256)),
                (
                    "purchase_price",
                    models.DecimalField(decimal_places=2, max_digits=19),
                ),
                ("discount_used", models.TextField(blank=True, max_length=256)),
                ("is_used", models.BooleanField(default=False)),
                (
                    "qr_code",
                    models.ImageField(blank=True, upload_to="ticket-qr-codes/"),
                ),
                ("qr_code_data", models.UUIDField(default=uuid.uuid4, editable=False)),
                (
                    "gig",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="Off_Axis_App.gig",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="Off_Axis_App.client",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Venue",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.TextField(max_length=500)),
                ("description", models.TextField(max_length=500)),
                ("venue_photo_url", models.TextField(max_length=2048)),
                (
                    "address",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="Off_Axis_App.address",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="gig",
            name="venue",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="Off_Axis_App.venue"
            ),
        ),
    ]
